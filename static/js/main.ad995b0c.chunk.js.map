{"version":3,"sources":["ts/components/SearchBar/SearchBar.tsx","ts/components/Movies/Movie/Movie.tsx","ts/components/Movies/Movies.tsx","ts/App.tsx","reportWebVitals.ts","index.tsx"],"names":["SearchBar","props","Fragment","className","type","placeholder","aria-label","aria-describedby","onChange","handleChangeTerm","id","Movie","movie","Poster","Title","Type","Year","alt","src","Movies","content","useState","movies","setMovies","error","setError","useEffect","fetchData","a","fetch","searchTerm","response","json","data","console","log","Response","Search","length","Error","timeoutId","setTimeout","clearTimeout","style","display","justifyContent","map","imdbID","App","setSearchTerm","event","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2LAyBeA,EAvBiD,SAACC,GAC/D,OACE,eAAC,IAAMC,SAAP,WACE,qBAAKC,UAAU,QAAf,SACE,wDAEF,sBAAKA,UAAU,2BAAf,UACE,uBACEC,KAAK,SACLD,UAAU,uBACVE,YAAY,SACZC,aAAW,SACXC,mBAAiB,eACjBC,SAAUP,EAAMQ,mBAElB,sBAAMN,UAAU,4BAA4BO,GAAG,eAA/C,SACE,mBAAGP,UAAU,0B,uBCMRQ,EAfqC,SAACV,GAAW,IAAD,EACvBA,EAAMW,MAApCC,EADqD,EACrDA,OAAQC,EAD6C,EAC7CA,MAAOC,EADsC,EACtCA,KAAMC,EADgC,EAChCA,KAE7B,OACE,sBAAKb,UAAU,uBAAf,UACE,qBAAKc,IAAKH,EAAOX,UAAU,WAAWe,IAAKL,IAC3C,sBAAKV,UAAU,UAAf,UACE,0CAAaW,KACb,yCAAYC,KACZ,uDAA0BC,YCgCnBG,EAhD2C,SAAClB,GAAW,IA+BhEmB,EA/B+D,EACvCC,mBAAS,IAD8B,mBAC5DC,EAD4D,KACpDC,EADoD,OAEzCF,mBAAS,IAFgC,mBAE5DG,EAF4D,KAErDC,EAFqD,KAiCnE,OA9BAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,8BAAAC,EAAA,+EAESC,MACrB,8CAAgD5B,EAAM6B,YAH1C,cAERC,EAFQ,gBAKKA,EAASC,OALd,OAKRC,EALQ,OAMdC,QAAQC,IAAIF,GACU,SAAlBA,EAAKG,UACPb,EAAUU,EAAKI,QACfZ,EAAS,IACTS,QAAQC,IAAIF,EAAKI,OAAOC,UAExBb,EAASQ,EAAKM,OACdhB,EAAU,KAbE,4GAAH,qDAiBTiB,EAAYC,YAAW,WACvBxC,EAAM6B,YACRH,MAED,KAEH,OAAO,WACLe,aAAaF,MAEd,CAACvC,EAAM6B,aAGI,KAAVN,EACK,mBAAGmB,MAAO,CAAEC,QAAS,OAAQC,eAAgB,UAA7C,SAA0DrB,KAC/DF,EAAOgB,SACTlB,EAAUE,EAAOwB,KAAI,SAAClC,GACpB,OAAO,cAAC,EAAD,CAA0BA,MAAOA,GAArBA,EAAMmC,YAK3B,cAAC,IAAM7C,SAAP,UACE,qBAAKC,UAAU,iBAAf,SAAiCiB,QCxBxB4B,EAjBoB,SAAC/C,GAAW,IAAD,EACRoB,mBAAS,IADD,mBACrCS,EADqC,KACzBmB,EADyB,KAG5C,OACE,cAAC,WAAD,UACE,qBAAK9C,UAAU,YAAf,SACE,sBAAKA,UAAU,WAAf,UACE,cAAC,EAAD,CACEM,iBAAkB,SAACyC,GAAD,OAAgBD,EAAcC,EAAMC,OAAOC,UAE/D,cAAC,EAAD,CAAQtB,WAAYA,YCAfuB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ad995b0c.chunk.js","sourcesContent":["import React, { FunctionComponent } from \"react\";\r\n\r\nconst SearchBar: FunctionComponent<{ handleChangeTerm: any }> = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"field\">\r\n        <label>Enter Search Term</label>\r\n      </div>\r\n      <div className=\"input-group rounded mb-2\">\r\n        <input\r\n          type=\"search\"\r\n          className=\"form-control rounded\"\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n          aria-describedby=\"search-addon\"\r\n          onChange={props.handleChangeTerm}\r\n        />\r\n        <span className=\"input-group-text border-0\" id=\"search-addon\">\r\n          <i className=\"bi bi-search\"></i>\r\n        </span>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\ninterface IMovie {\r\n  Poster: string;\r\n  Title: string;\r\n  Type: string;\r\n  Year: string;\r\n}\r\n\r\nconst Movie: FunctionComponent<{ movie: IMovie }> = (props) => {\r\n  const { Poster, Title, Type, Year } = props.movie;\r\n\r\n  return (\r\n    <div className=\"video-item item mb-2\">\r\n      <img alt={Title} className=\"ui image\" src={Poster} />\r\n      <div className=\"content\">\r\n        <div>Title: {Title}</div>\r\n        <div>Type: {Type}</div>\r\n        <div>Year of Production: {Year}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React, { FunctionComponent, useEffect, useState } from \"react\";\r\nimport Movie from \"./Movie/Movie\";\r\nconst Movies: FunctionComponent<{ searchTerm: string }> = (props) => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://www.omdbapi.com/?apikey=a60d62fd&s=\" + props.searchTerm\r\n        );\r\n        const data = await response.json();\r\n        console.log(data);\r\n        if (data.Response === \"True\") {\r\n          setMovies(data.Search);\r\n          setError(\"\");\r\n          console.log(data.Search.length);\r\n        } else {\r\n          setError(data.Error);\r\n          setMovies([]);\r\n        }\r\n      } catch (error) {}\r\n    };\r\n    const timeoutId = setTimeout(() => {\r\n      if (props.searchTerm) {\r\n        fetchData();\r\n      }\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [props.searchTerm]);\r\n  let content;\r\n\r\n  if (error !== \"\")\r\n    return <p style={{ display: \"flex\", justifyContent: \"center\" }}>{error}</p>;\r\n  if (movies.length) {\r\n    content = movies.map((movie: any) => {\r\n      return <Movie key={movie.imdbID} movie={movie} />;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"ui celled list\">{content}</div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import React, { FunctionComponent, Fragment, useState } from \"react\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport Movies from \"./components/Movies/Movies\";\n\nconst App: FunctionComponent<{}> = (props) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <div className=\"flex-row\">\n          <SearchBar\n            handleChangeTerm={(event: any) => setSearchTerm(event.target.value)}\n          />\n          <Movies searchTerm={searchTerm}/>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as React from \"react\";\n\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './ts/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}